services:
  api:
    build:
      context: .
      target: ${TARGET:-dev}
      dockerfile: Dockerfile
    container_name: api
    ports:
      - '8080:3000'
    volumes:
      - .:/usr/src/app
      - ./node_modules:/usr/src/app/node_modules
    environment:
      NODE_ENV: ${NODE_ENV:-development}
    depends_on:
      postgresql:
        condition: service_healthy

  postgresql:
    image: postgres:17.6
    container_name: postgresql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4:9.8.0
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - '15432:80'
    depends_on:
      postgresql:
        condition: service_started
    restart: unless-stopped
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./pgadmin-servers.json:/pgadmin4/servers.json

volumes:
  postgresql-data:
  pgadmin-data:
